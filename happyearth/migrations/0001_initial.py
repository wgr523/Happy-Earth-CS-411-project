# Generated by Django 2.1.7 on 2019-03-26 03:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('review', models.CharField(blank=True, max_length=500)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('flavor', models.CharField(blank=True, max_length=50)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('price_level', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Serve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(blank=True, default=1)),
                ('price', models.CharField(max_length=50)),
                ('available', models.BooleanField(default=True)),
                ('ingredient', models.CharField(blank=True, max_length=500)),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='happyearth.Dish')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='happyearth.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('not_eat', models.CharField(blank=True, max_length=500)),
                ('liked_style', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='restaurant',
            unique_together={('name', 'address')},
        ),
        migrations.AddField(
            model_name='favorites',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='happyearth.Restaurant'),
        ),
        migrations.AddField(
            model_name='favorites',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='happyearth.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='dish',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyearth.Dish'),
        ),
        migrations.AddField(
            model_name='comment',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='happyearth.Restaurant'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='happyearth.User'),
        ),
        migrations.AlterUniqueTogether(
            name='serve',
            unique_together={('dish', 'restaurant')},
        ),
        migrations.AlterUniqueTogether(
            name='favorites',
            unique_together={('user', 'restaurant', 'tag')},
        ),
    ]
